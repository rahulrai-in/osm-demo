apiVersion: v1
kind: Service
metadata:
  name: bookstore
  namespace: bookstore
  labels:
    app: bookstore
spec:
  ports:
    - port: 14001
      name: bookstore-port
  selector:
    app: bookstore
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookstore-v2
  namespace: bookstore
---
apiVersion: v1
kind: Service
metadata:
  name: bookstore-v2
  namespace: bookstore
  labels:
    app: bookstore
    version: v2
spec:
  ports:
    - port: 14001
      name: bookstore-port
  selector:
    app: bookstore
    version: v2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookstore-v2
  namespace: bookstore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstore
      version: v2
  template:
    metadata:
      labels:
        app: bookstore
        version: v2
    spec:
      serviceAccountName: bookstore-v2
      containers:
        - image: openservicemesh/bookstore:latest-main
          imagePullPolicy: Always
          name: bookstore
          ports:
            - containerPort: 14001
              name: web
          command: ["/bookstore"]
          args: ["--port", "14001"]
          env:
            - name: IDENTITY
              value: bookstore-v2.k8s
            - name: BOOKWAREHOUSE_NAMESPACE
              value: bookwarehouse

          # OSM's mutating webhook will rewrite this liveness probe to /osm-liveness-probe and
          # Envoy will have a dedicated listener on port 15901 for this liveness probe
          livenessProbe:
            httpGet:
              path: /liveness
              port: 14001
            initialDelaySeconds: 3
            periodSeconds: 3

          # OSM's mutating webhook will rewrite this readiness probe to /osm-readiness-probe and
          # Envoy will have a dedicated listener on port 15902 for this readiness probe
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /readiness
              port: 14001
              scheme: HTTP

          # OSM's mutating webhook will rewrite this startup probe to /osm-startup-probe and
          # Envoy will have a dedicated listener on port 15903 for this startup probe
          startupProbe:
            httpGet:
              path: /startup
              port: 14001
            failureThreshold: 30
            periodSeconds: 5

          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
              memory: 500M
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bookstore-v2
  namespace: bookstore
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - path: /bookstore-v2(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: bookstore-v2
                port:
                  number: 14001
  ingressClassName: nginx
---
kind: IngressBackend
apiVersion: policy.openservicemesh.io/v1alpha1
metadata:
  name: bookstore-v2
  namespace: bookstore
spec:
  backends:
    - name: bookstore-v2
      port:
        number: 14001
        protocol: http
  sources:
    - kind: Service
      namespace: ingress-nginx
      name: ingress-nginx-controller
