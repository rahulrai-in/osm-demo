# Create bookthief ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookthief
  namespace: bookthief

---
apiVersion: v1
kind: Service
metadata:
  name: bookthief
  namespace: "bookthief"
  labels:
    app: bookthief
spec:
  ports:
    - port: 14001
      name: http-bookthief
  selector:
    app: bookthief
---
# Create bookthief Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookthief
  namespace: bookthief
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookthief
  template:
    metadata:
      labels:
        app: bookthief
        version: v1
    spec:
      serviceAccountName: bookthief
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: bookthief
          image: openservicemesh/bookthief:v1.0.0
          imagePullPolicy: Always
          command: ["/bookthief"]
          env:
            - name: "BOOKSTORE_NAMESPACE"
              value: bookstore
            - name: "BOOKSTORE_SVC"
              value: bookstore
            - name: "BOOKTHIEF_EXPECTED_RESPONSE_CODE"
              value: "503"
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
              memory: 500M
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bookthief
  namespace: bookthief
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - path: /bookthief(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: bookthief
                port:
                  number: 14001
  ingressClassName: nginx
---
kind: IngressBackend
apiVersion: policy.openservicemesh.io/v1alpha1
metadata:
  name: bookthief
  namespace: bookthief
spec:
  backends:
    - name: bookthief
      port:
        number: 14001
        protocol: http
  sources:
    - kind: Service
      namespace: ingress-nginx
      name: ingress-nginx-controller
